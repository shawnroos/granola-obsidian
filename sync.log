[2025-02-26 17:46:11] Created backup of Raycast script at /Users/shawnroos/projects/Granola Scraper/backups/granola-to-obsidian_20250226_174611.sh.bak
[2025-02-26 17:46:11] Updated Raycast script with project version
[2025-02-26 17:46:11] Made Raycast script executable
[2025-02-26 17:46:11] Changes made:
--- /Users/shawnroos/projects/Granola Scraper/backups/granola-to-obsidian_20250226_174611.sh.bak	2025-02-26 17:46:11
+++ /Users/shawnroos/.raycast/scripts/granola-to-obsidian.sh	2025-02-26 17:46:11
+debug_log() {
+    printf "DEBUG: %s\n" "$1" >&2
+}
+
+# Format dates consistently
+format_date() {
+    local input_date="$1"  # Expected format: DDMMYY
+    local format_type="$2" # Can be: daily_note_file, daily_note_header, front_matter, filename
+
+    # Extract components
+    local day=$(echo "$input_date" | cut -c1-2)
+    local month_num=$(echo "$input_date" | cut -c3-4)
+    local year=$(echo "$input_date" | cut -c5-6)
+    
+    # Convert month number to name
+    local month_name
+    case "$month_num" in
+        01) month_name="January" ;;
+        02) month_name="February" ;;
+        03) month_name="March" ;;
+        04) month_name="April" ;;
+        05) month_name="May" ;;
+        06) month_name="June" ;;
+        07) month_name="July" ;;
+        08) month_name="August" ;;
+        09) month_name="September" ;;
+        10) month_name="October" ;;
+        11) month_name="November" ;;
+        12) month_name="December" ;;
+    esac
+
+    # Get day of week using date command
+    local dow=$(date -j -f "%d%m%y" "${day}${month_num}${year}" "+%A")
+    
+    case "$format_type" in
+        daily_note_file)
+            # Format: "26 February '25.md"
+            printf "%d %s '%s.md" "$((10#$day))" "$month_name" "$year"
+            ;;
+        daily_note_header)
+            # Format: "Wednesday, February 26"
+            printf "%s, %s %d" "$dow" "$month_name" "$((10#$day))"
+            ;;
+        front_matter)
+            # Format: "2025-02-26"
+            printf "20%s-%s-%s" "$year" "$month_num" "$day"
+            ;;
+        filename)
+            # Format: "20250226"
+            printf "20%s%s%s" "$year" "$month_num" "$day"
+            ;;
+    esac
+}
+
+# Write note content to file
+write_note() {
+    local title="$1"
+    local date="$2"
+    local transcript_url="$3"
+    local attendees="$4"
+    local notes="$5"
+    local output_file="$6"
+
+    # Format date for front matter
+    local front_matter_date=$(format_date "$date" "front_matter")
+    
+    # Create front matter
+    cat > "$output_file" << EOL
+---
+title: $title
+date: $front_matter_date
+type: granola
+transcript: $transcript_url
+attendees: [$attendees]
+---
+
+$notes
+EOL
+}
+
+# Get clipboard and save to Obsidian
-# Get clipboard and save to Obsidian
-NOTES=$(pbpaste)
+if [ -t 0 ]; then
+    # If no input is piped, use clipboard
+    NOTES=$(pbpaste)
+else
+    # If input is piped, use that
+    NOTES=$(cat -)
+fi
+
-        if ! grep -q "^## ðŸ“… Meetings" "$DAILY_NOTE"; then
+        if ! grep -q "^## Meetings" "$DAILY_NOTE"; then
-## ðŸ“… Meetings
+## Meetings
-    # Add link under Meetings section - look for the line after "## ðŸ“… Meetings" and "---"
+    # Add link under Meetings section - look for the line after "## Meetings" and "---"
-        /^## ðŸ“… Meetings/{p=1}
+        /^## Meetings/{p=1}
-    echo "âœ“ Saved to Obsidian and added to daily note: $TITLE"
+    echo " Saved to Obsidian and added to daily note: $TITLE"
[2025-02-26 17:46:11] Synchronization completed successfully
[2025-02-26 17:51:43] Created backup of Raycast script at /Users/shawnroos/projects/Granola Scraper/backups/granola-to-obsidian_20250226_175143.sh.bak
[2025-02-26 17:51:43] Scripts are already in sync. No changes needed.
[2025-02-26 17:51:43] Synchronization completed successfully
